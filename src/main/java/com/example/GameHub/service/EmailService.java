package com.example.GameHub.service;


import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;
import org.thymeleaf.TemplateEngine;
import org.thymeleaf.context.Context;

import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

@Service
@RequiredArgsConstructor
@Slf4j
public class EmailService {

    private final JavaMailSender mailSender;
    private final TemplateEngine templateEngine;



    public void sendVerificationEmail(String to, String verificationUrl) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(to);
            helper.setSubject("X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n");

            String emailContent = "<div style=\"font-family: Arial, sans-serif; padding: 20px; background-color: #f4f4f4;\">"
                    + "<div style=\"max-width: 500px; margin: auto; background-color: white; padding: 20px; border-radius: 10px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\">"
                    + "<h2 style=\"color: #333; text-align: center;\">X√°c nh·∫≠n t√†i kho·∫£n c·ªßa b·∫°n</h2>"
                    + "<p style=\"font-size: 16px; color: #666;\">C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω! Vui l√≤ng nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n:</p>"
                    + "<div style=\"text-align: center; margin: 20px 0;\">"
                    + "<a href=\"" + verificationUrl + "\" style=\"background-color: #28a745; color: white; padding: 12px 20px; text-decoration: none; border-radius: 5px; font-size: 16px; display: inline-block;\">X√°c th·ª±c t√†i kho·∫£n</a>"
                    + "</div>"
                    + "<p style=\"font-size: 14px; color: #999; text-align: center;\">N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.</p>"
                    + "</div>"
                    + "</div>";

            helper.setText(emailContent, true);

            mailSender.send(message);
            log.info("Email x√°c th·ª±c ƒë√£ g·ª≠i ƒë·∫øn: {}", to);
        } catch (MessagingException e) {
            log.error("L·ªói khi g·ª≠i email", e);
            throw new RuntimeException("Kh√¥ng th·ªÉ g·ª≠i email x√°c th·ª±c.");
        }
    }

    public void sendPasswordChangeNotification(String to) {
        String subject = "üîê M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh c√¥ng!";

        // T·∫°o d·ªØ li·ªáu Thymeleaf
        Context context = new Context();
        Map<String, Object> variables = new HashMap<>();
        variables.put("email", to);
        context.setVariables(variables);

        // Load HTML t·ª´ file Thymeleaf
        String htmlContent = templateEngine.process("/password-change", context);

        sendHtmlEmail(to, subject, htmlContent);
    }

    private void sendHtmlEmail(String to, String subject, String htmlContent) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, MimeMessageHelper.MULTIPART_MODE_MIXED_RELATED, StandardCharsets.UTF_8.name());

            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlContent, true); // true = g·ª≠i email v·ªõi HTML

            mailSender.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException("L·ªói khi g·ª≠i email: " + e.getMessage());
        }
    }

    public void sendEmail(String to, String subject, String content) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(content, true); // `true` ƒë·ªÉ n·ªôi dung h·ªó tr·ª£ HTML

            mailSender.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException("L·ªói khi g·ª≠i email: " + e.getMessage());
        }
    }
    public void sendOtpEmail(String email, String otp) {
        String subject = "M√£ OTP ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u";
        String content = "M√£ OTP c·ªßa b·∫°n l√†: " + otp + ". M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t.";

        sendEmail(email, subject, content);
    }





}
